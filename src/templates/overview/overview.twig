{% import 'macros.twig' as macros %}

{% extends 'base.twig' %}

{% block content %}

{{ macros.render_overview_navigation(week_state, week_user_total, has_projects) }}
{{ macros.render_week(week_data, week_state, week_user_day_times) }}

<script type="module" nonce="{{ get_nonce() }}">
    import {
        Pebble
    } from '/js/pebble.js?v={{ get_version() }}';

    document.addEventListener('click', async function(event) {

        if (!event.target.matches('.move_to_today')) return;
        event.preventDefault();

        const todayElem = document.getElementById(event.target);
        const task_id = event.target.dataset.id

        const formData = new FormData();
        formData.append('now', 'true')
        formData.append('id', task_id);

        try {
            const res = await Pebble.asyncPost('/task/put/' + task_id, formData);
            if (res.error === false) {
                location.reload();
            } else {
                Pebble.setFlashMessage(res.message, 'error');
            }
        } catch (e) {
            Pebble.asyncPostError('/error/log', e.stack)
        }
    });

    document.addEventListener('click', async function(event) {

        if (!event.target.matches('.move_exceeded_today')) return;

        event.preventDefault();

        const todayElem = document.getElementById(event.target);
        const task_id = event.target.dataset.id
        const formData = new FormData();

        try {
            const res = await Pebble.asyncPost('/task/put/exceeded/today', formData);
            if (res.error === false) {
                location.reload();
            } else {
                Pebble.setFlashMessage(res.message, 'error');
            }
        } catch (e) {
            Pebble.asyncPostError('/error/log', e.stack)
        }
    });

    document.addEventListener('click', async function(event) {

        if (!event.target.matches('.toggle_current_day')) return;

        event.preventDefault();

        const state = event.target.dataset.currentDayState
        const formData = new FormData();
        if (state == '0') {
            formData.append('overview_current_day_state', '1')
        } else {
            formData.append('overview_current_day_state', '0')
        }

        try {
            const res = await Pebble.asyncPost('/overview/settings/put', formData);
            if (res.error === false) {
                location.reload();
            } else {
                Pebble.setFlashMessage(res.message, 'error');
            }
        } catch (e) {
            Pebble.asyncPostError('/error/log', e.stack)
        }
    });
</script>

{% endblock %}